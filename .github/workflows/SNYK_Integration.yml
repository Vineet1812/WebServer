# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security Scan

on:
  push:
    branches: ["Security_branch"]
  pull_request:
    branches: ["Security_branch"]

permissions:
  contents: read

jobs:
  snyk-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install Snyk CLI
        run: npm install -g snyk
      
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      
      # Scan the entire project directory for vulnerabilities
      # This works for projects with mixed file types (HTML, Java, etc.)
      - name: Scan project for vulnerabilities
        run: snyk test --all-projects --detection-depth=6
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Scan specifically for Java vulnerabilities by directory scanning
      - name: Scan Java files
        run: |
          # Find directories containing Java files and scan them
          for dir in $(find . -name "*.java" -type f | xargs dirname | sort | uniq); do
            echo "Scanning directory: $dir"
            snyk test --file=$dir
          done
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Scan HTML files
      - name: Scan HTML files
        run: |
          for file in $(find . -name "*.html" -type f); do
            echo "Scanning HTML file: $file"
            snyk test --file=$file
          done
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Monitor the project for ongoing vulnerability tracking
      - name: Monitor project in Snyk
        run: snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
